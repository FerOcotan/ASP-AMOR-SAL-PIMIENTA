@model restaurante.Models.orden
<link rel="stylesheet" href="~/Content/input.css">
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Order</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.id_orden, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.id_orden, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.id_orden, "", new { @class = "text-danger" })
        </div>
    </div>


    @Html.HiddenFor(model => model.id_orden)

    <div class="form-group">
        @Html.LabelFor(model => model.id_empleado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("id_empleado", new SelectList(new[] {
                new SelectListItem { Text = "Fernanda", Value = "1" },
                new SelectListItem { Text = "Angela", Value = "8" },
                new SelectListItem { Text = "Gufer", Value = "9" },
                new SelectListItem { Text = "Karlos", Value = "10" }
                // Agrega más opciones aquí según sea necesario
            }, "Value", "Text"), "Seleccionar empleado", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_empleado, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="date" class="form-control" id="fecha" name="fecha" />
            @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.n_mesa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.n_mesa, new SelectList(new[] {
                new SelectListItem { Text = "Mesa 1", Value = "1" },
                new SelectListItem { Text = "Mesa 2", Value = "2" },
                new SelectListItem { Text = "Mesa 3", Value = "3" },
                new SelectListItem { Text = "Mesa 4", Value = "4" },
               new SelectListItem { Text = "Mesa 5", Value = "5" },
               new SelectListItem { Text = "Mesa 6", Value = "6" }
                // Agrega más opciones aquí según sea necesario
            }, "Value", "Text"), "Seleccionar mesa", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.n_mesa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.estado, new SelectList(new[] {
                new SelectListItem { Text = "Listo", Value = "Listo" },
                new SelectListItem { Text = "Cocina", Value = "Cocina" },
                new SelectListItem { Text = "Servido", Value = "Servido" },
                new SelectListItem { Text = "Pagado", Value = "Pagado" },
                // Agrega más opciones según sea necesario
            }, "Value", "Text"), "Seleccionar estado", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.total, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.total, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.propina, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.propina, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.propina, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "back-to-list-link" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
